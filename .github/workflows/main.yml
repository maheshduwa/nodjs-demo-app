name: CI / CD â€” Test, Build, Push Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test on Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build (if present)
        run: npm run build --if-present

      - name: Run tests
        run: npm test

  build-and-push:
    name: Build and Push Docker image
    needs: test
    # only run the Docker build/push on pushes to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          # tags: maheshduwal/task1:latest
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/task1:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/task1:latest
          # enable remote registry cache to speed up subsequent builds
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nodjs-demo-app:cache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nodjs-demo-app:cache,mode=max
